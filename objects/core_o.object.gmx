<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>core_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player = instance_nearest(x,y,player_o);
lefthalf = 62;
righthalf = 66;

//create boosters
booster1 = instance_create(x,y,booster_o);
booster2 = instance_create(x,y,booster_o);
booster3 = instance_create(x,y,booster_o);

/***************************************************
  Create Legs
 ***************************************************/
leg1=instance_create(x,y,leg_o);
leg1.depth=depth+2
leg1.me = 1;
if(leg1.legnums=2)
{
    leg2 = instance_create(x,y,leg_o);
    leg2.depth = depth-1;
    leg2.me = 2;
    legnums = 2;
}
else if(leg1.legnums=4)
{
    leg2 = instance_create(x,y,leg_o);
    leg2.depth = depth-1;
    leg2.me = 2;
    leg3 = instance_create(x,y,leg_o);
    leg3.depth = depth-2;
    leg3.me = 3;
    leg4 = instance_create(x,y,leg_o);
    leg4.depth = depth+3;
    leg4.me = 4;
    legnums = 4;
}

/***************************************************
  END Create Legs
 ***************************************************/

//Create Head
head = instance_create(x,y,head_o);
//END Create Head

//Create Arm1
arm1 = instance_create(x,y,arm_o);
arm1.depth = depth-2;
//END Create Arm1

//Create Arm2
arm2 = instance_create(x,y,proto_gun_o);
arm2.depth = depth+4;
//END Create Arm2

/***************************************************
  Set Height
 ***************************************************/
headheight = head.sprite_height;
legheight = leg1.sprite_height;
height = head.sprite_height+leg1.sprite_height+sprite_height;

attack1 = false;
attack2 = false;
attack1_type = arm1.attack_type;
attack2_type = arm2.attack_type;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/***************************************************
  Anchor Limbs
 ***************************************************/
 
//legs
joint = rotation_tracker(x,y,image_angle,x-1,y+35);
limb_anchor(leg1,joint[0],joint[1],hspeed,vspeed,image_xscale);
limb_anchor(leg2,joint[0],joint[1],hspeed,vspeed,image_xscale);
if(legnums = 4)
{
    limb_anchor(leg3,joint[0],joint[1],hspeed,vspeed,-image_xscale);
    limb_anchor(leg4,joint[0],joint[1],hspeed,vspeed,-image_xscale);
}
//END legs

//arms
joint = rotation_tracker(x,y,image_angle,x-9,y+4);
limb_anchor(arm1,joint[0],joint[1],hspeed,vspeed,image_xscale);
limb_anchor(arm2,joint[0],joint[1],hspeed,vspeed,image_xscale);
//END arms

//head
joint = rotation_tracker(x,y,image_angle,x-5,y-15);
limb_anchor(head,joint[0],joint[1],hspeed,vspeed,image_xscale);
//END head

//boosters
joint = rotation_tracker(x,y,image_angle,x-60,y);
limb_anchor(booster1,joint[0],joint[1],hspeed,vspeed,image_xscale);
joint = rotation_tracker(x,y,image_angle,x-60,y+35);
limb_anchor(booster2,joint[0],joint[1],hspeed,vspeed,image_xscale);
joint = rotation_tracker(x,y,image_angle,x-65,y-35);
limb_anchor(booster3,joint[0],joint[1],hspeed,vspeed,image_xscale);
//END boosters

/***************************************************
  END Anchor Limbs
 ***************************************************/

leg_var = 30*sin(degtorad(1.5*x));
leg1.image_angle = leg_var + image_angle/2;
leg2.image_angle = -leg_var + image_angle/2;
arm1.image_angle = image_angle*2.2;
arm2.image_angle = abs(image_angle*1.8)*image_xscale;
head.image_angle = image_angle*1.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,make_color_hsv(hue_2,sat_2,val_2),image_alpha);
draw_sprite_ext(sprite_index,1,x,y,image_xscale,image_yscale,image_angle,make_color_hsv(hue_prime,sat_prime,val_prime),image_alpha);
draw_sprite_ext(sprite_index,2,x,y,image_xscale,image_yscale,image_angle,make_color_hsv(hue_2,sat_2,val_2),image_alpha);
draw_sprite_ext(sprite_index,3,x,y,image_xscale,image_yscale,image_angle,make_color_hsv(hue_prime,sat_prime,val_prime),image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>126,135</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
