<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>arm_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = false;
lowerarm = instance_create(x,y,heavy_sword2);
lowerarm.depth = depth;
vspeedvar = 0;
hspeedvar = 0;
player=instance_nearest(x,y,player_o);
isAttacking = false;
attack_type = 0;
animationCounter = 0;
lower_angle = 1234;
delete = false;
dominance = 10;
number = 10;
swingSpeed = 1.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dead)
{
    vspeed+=1;
    playerCollision();
    image_angle+=random_range(1,10);
    effect_create_above(ef_smoke,x,y,1,c_white);
}
else
{
    if(!instance_exists(player))
    {
        with(lowerarm){instance_destroy();}
        instance_destroy();
    }
    
    joint = rotation_tracker(x,y,image_angle,x+1*-image_xscale,y+40);
    limb_anchor(lowerarm,joint[0],joint[1],hspeed,vspeed,image_xscale);
    lowerarm.depth = depth-1;
    
    //Attacking Local State
    if(lower_angle != 1234)
    {
        lowerarm.image_angle = angle_ease(lowerarm.image_angle,lower_angle,3);
    }
    //END Attacking Local State
    
    //Normal State
    else if(player.state=string('normal') or player.state = string('mobileAttack'))
    {
        if(abs(image_angle) &gt; 30)
        {
            lowerarm.image_angle = angle_ease(lowerarm.image_angle,70*image_xscale,8);
        }
        else
        {
            lowerarm.image_angle = angle_ease(lowerarm.image_angle,3*abs(image_angle)*image_xscale,8);
        }
    }
    //END Normal State
    
    //ToNorm State
    else if(player.state=string('tonorm'))
    {
        if(abs(image_angle) &gt; 30)
        {
            lowerarm.image_angle = angle_ease(lowerarm.image_angle,70*image_xscale,8);
        }
        else
        {
            lowerarm.image_angle = angle_ease(lowerarm.image_angle,3*abs(image_angle)*image_xscale,3);
        }
    }
    //END ToNorm State
    
    //Shield State
    else if(player.state=string('shield'))
    {
        lowerarm.image_angle = angle_ease(lowerarm.image_angle,-10*image_xscale,4);
    }
    //END Shield State
    
    //Jump State
    else if(player.state=string('jump'))
    {
        lowerarm.image_angle = angle_ease(lowerarm.image_angle,70*image_xscale,8);
    }
    //END Jump State
    
    //Land State
    else if(player.state=string('land'))
    {
        lowerarm.image_angle = angle_ease(lowerarm.image_angle,70*image_xscale,8);
    }
    //END Land State
    
    if(isAttacking)
    {
        lowerarm.isAttacking = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,getPlayerColor(player.playerNum,1),image_alpha);
draw_sprite_ext(sprite_index,1,x,y,image_xscale,image_yscale,image_angle,getPlayerColor(player.playerNum,0),image_alpha);
draw_sprite_ext(sprite_index,2,x,y,image_xscale,image_yscale,image_angle,getPlayerColor(player.playerNum,1),image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>28,19</point>
    <point>37,37</point>
  </PhysicsShapePoints>
</object>
