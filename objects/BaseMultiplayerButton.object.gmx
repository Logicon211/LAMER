<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;

//defaults to player 1. Need to associate a new player on creation
owningPlayer = 0;

//Individual create code
alarm[0] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//state = 1;

//buttonArray[selectedButton].state = 0;
selectedButton[owningPlayer] = num;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;

alarm[1] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Individual Code for each selector player

if(state = 1)
{
    //P1
    if(owningPlayer == 0)
    {
         draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_red,image_alpha);
    }
    //P2
    else if(owningPlayer == 1)
    {
        if(!isAI[1])
        {
            draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_orange,image_alpha);
        }
        else
        {
            if(lockedIn[0] and !lockedIn[1] and isAI[1])
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_red,image_alpha);
            }
            else
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_orange,image_alpha);
            }
        }
    }
    //P3
    else if(owningPlayer == 2)
    {
        if(!isAI[2])
        {
            draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_green,image_alpha);
        }
        else
        {
            if(lockedIn[0] and lockedIn[1] and !lockedIn[2] and isAI[1] and isAI[2] or (lockedIn[0] and !lockedIn[2] and !isAI[1] and isAI[2]))
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_red,image_alpha);
            }
            else
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_green,image_alpha);
            }
        }    
    }
    
    //P4
    else if(owningPlayer == 3)
    {
        if(!isAI[3])
        {
            draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_blue,image_alpha);
        }
        else
        {
            if(lockedIn[0] and lockedIn[1] and lockedIn[2] and !lockedIn[3] and isAI[1] and isAI[2] and isAI[3] or (lockedIn[0] and !lockedIn[3] and !isAI[1] and !isAI[2] and isAI[3]) or (lockedIn[0] and lockedIn[2] and !lockedIn[3] and isAI[2] and isAI[3]))
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_red,image_alpha);
            }
            else
            {
                draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_blue,image_alpha);
            }
        } 
    }
}
else
{
    draw_sprite_ext(sprite_index,state,x,y,image_xscale,image_yscale,image_angle,c_white,image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
