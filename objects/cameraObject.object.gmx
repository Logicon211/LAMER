<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cameraSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0.5;
//startCode = 0;

pNums = instance_number(player_o);
for (i=0; i&lt;pNums; i++)
{
    players[i] = instance_find(player_o,i);
}
for(j=0; j&lt;i; j++)
{
    positionTrack[j,0] = players[j].x;
    positionTrack[j,1] = players[j].y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0; i&lt;pNums; i++)
{
    positionTrack[i,0] = players[i].x;
    positionTrack[i,1] = players[i].y;
}
xPos = 0;
yPos = 0;
for(i=0; i&lt;pNums; i++)
{
    xPos += positionTrack[i,0];
    yPos += positionTrack[i,1];
}
xPos = xPos/pNums;
yPos = yPos/pNums;

x = x_ease(x,xPos,4);
y = y_ease(y,yPos,4);

wMin = positionTrack[0,0];
wMax = positionTrack[0,0];
hMin = positionTrack[0,1];
hMax = positionTrack[0,1];

for(i=0; i&lt;pNums; i++)
{   if(wMin&gt;positionTrack[i,0])
    {   wMin = positionTrack[i,0];
    }
    if(wMax&lt;positionTrack[i,0])
    {   wMax = positionTrack[i,0];
    }
    if(hMin&gt;positionTrack[i,1])
    {   hMin = positionTrack[i,1];
    }
    if(hMax&lt;positionTrack[i,1])
    {   hMax = positionTrack[i,1];
    }
}

wMin -= 150;
wMax += 150;
hMin -= 200;
hMax += 200;

wVar = (wMax-wMin)/1280;
hVar = (hMax-hMin)/720;

zoomScale = hVar;
if(wVar&gt;hVar)
{   zoomScale = wVar;
}

wVar = abs(1280*zoomScale);
hVar = view_wview[0]*9/16;
if(wVar &gt;= 1280 and hVar &gt;= 720)
{
    view_wview[0] = wVar;
    view_hview[0] = hVar;
}
else
{
    view_wview[0] = 1280;
    view_hview[0] = 720;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
