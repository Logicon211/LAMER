<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>str = "Press A to Skip"
image_alpha = 0
active = false
aVar = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active)
{
    image_alpha += 0.025*aVar
    if(image_alpha&gt;0.9)
    {
        aVar = -1
    }
    else if(image_alpha&lt;0.09)
    {
        aVar = 1
    }
    
    if(keyboard_check_released(ord('A')) or gamepad_button_check_released(0,gp_face1) or gamepad_button_check_released(1,gp_face1) or gamepad_button_check_released(2,gp_face1) or gamepad_button_check_released(3,gp_face1))
    {
        room_goto(MenuRoom)
    }    
}
else
{
    if(keyboard_check_released(vk_anykey) or gamepad_button_check_released(0,gp_face1) or gamepad_button_check_released(1,gp_face1) or gamepad_button_check_released(2,gp_face1) or gamepad_button_check_released(3,gp_face1))
    {
        active = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = room_width/2 - string_length(str)/2*20;
yy = room_height-100;
a=image_alpha;
draw_set_color(c_white)
for(i=0; i&lt;8; i++)
{
    a-=0.1;
    draw_set_alpha(a);
    draw_text(xx,yy-i,str);
    draw_text(xx,yy+i,str);
    draw_text(xx-i,yy,str);
    draw_text(xx+i,yy,str);
    draw_text(xx-i,yy-i,str);
    draw_text(xx+i,yy+i,str);
    draw_text(xx-i,yy+i,str);
    draw_text(xx+i,yy-i,str);
}
draw_set_alpha(1);
draw_set_color(c_white);

if(active)
{
    //black outline
    draw_text_transformed_color(room_width/2 - string_length(str)/2*20 -1,1-room_height-100,str,1,1,0,c_black,c_black,c_black,c_black,1)
    draw_text_transformed_color(room_width/2 - string_length(str)/2*20 -1,2+room_height-100,str,1,1,0,c_black,c_black,c_black,c_black,1)
    draw_text_transformed_color(room_width/2 - string_length(str)/2*20 +2,1-room_height-100,str,1,1,0,c_black,c_black,c_black,c_black,1)
    draw_text_transformed_color(room_width/2 - string_length(str)/2*20 +2,2+room_height-100,str,1,1,0,c_black,c_black,c_black,c_black,1)
    //white
    draw_text_transformed_color(room_width/2 - string_length(str)/2*20,room_height-100,str,1,1,0,c_white,make_color_hsv(30,100,200),make_color_hsv(30,120,140),make_color_hsv(30,100,222),1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>250,250</point>
  </PhysicsShapePoints>
</object>
