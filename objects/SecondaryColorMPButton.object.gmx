<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SecondaryColorButtonSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>BaseMultiplayerColorButton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = false;
//Need to define actions specifically for multiplayer Inventory

if(selectedColorButton[owningPlayer] != -1) 
{
    if(owningPlayer == 0)
    {
        player1Buttons[selectedColorButton[owningPlayer]].state = 0;
    }
    else if(owningPlayer == 1)
    {
        player2Buttons[selectedColorButton[owningPlayer]].state = 0;
    }
    else if(owningPlayer == 2)
    {
        player3Buttons[selectedColorButton[owningPlayer]].state = 0;
    }
    else if(owningPlayer == 3)
    {
        player4Buttons[selectedColorButton[owningPlayer]].state = 0;
    }
}

selectedColorButton[owningPlayer] = num;
selectedButton[owningPlayer] = num;

if(hueBar[owningPlayer] != 0)
{
    with(hueBar[owningPlayer]) {
        instance_destroy();
    }
}
if(satBar[owningPlayer] != 0)
{
    with(satBar[owningPlayer]) {
        instance_destroy();
    }
}
if(valBar[owningPlayer] != 0)
{
    with(valBar[owningPlayer]) {
        instance_destroy();
    }
}

//recreate them
if(owningPlayer == 0)
{
    hueBar[owningPlayer] = instance_create(470, 40, hue_2_o);
    hueBar[owningPlayer].image_xscale = 0.75;
    hueBar[owningPlayer].image_yscale = 0.75;
    hueBar[owningPlayer].owningPlayer = owningPlayer;
    hueBar[owningPlayer].alarm[0]= true
    satBar[owningPlayer] = instance_create(470, 70, sat_2_o);
    satBar[owningPlayer].image_xscale = 0.75;
    satBar[owningPlayer].image_yscale = 0.75;
    satBar[owningPlayer].owningPlayer = owningPlayer;
    satBar[owningPlayer].alarm[0]= true
    valBar[owningPlayer] = instance_create(470, 100, val_2_o);
    valBar[owningPlayer].image_xscale = 0.75;
    valBar[owningPlayer].image_yscale = 0.75;
    valBar[owningPlayer].owningPlayer = owningPlayer;
    valBar[owningPlayer].alarm[0]= true
}
else if(owningPlayer == 1)
{
    hueBar[owningPlayer] = instance_create(1100, 40, hue_2_o);
    hueBar[owningPlayer].image_xscale = 0.75;
    hueBar[owningPlayer].image_yscale = 0.75;
    hueBar[owningPlayer].owningPlayer = owningPlayer;
    hueBar[owningPlayer].alarm[0]= true
    satBar[owningPlayer] = instance_create(1100, 70, sat_2_o);
    satBar[owningPlayer].image_xscale = 0.75;
    satBar[owningPlayer].image_yscale = 0.75;
    satBar[owningPlayer].owningPlayer = owningPlayer;
    satBar[owningPlayer].alarm[0]= true
    valBar[owningPlayer] = instance_create(1100, 100, val_2_o);
    valBar[owningPlayer].image_xscale = 0.75;
    valBar[owningPlayer].image_yscale = 0.75;
    valBar[owningPlayer].owningPlayer = owningPlayer;
    valBar[owningPlayer].alarm[0]= true
}
else if(owningPlayer == 2)
{
    hueBar[owningPlayer] = instance_create(470, 400, hue_2_o);
    hueBar[owningPlayer].image_xscale = 0.75;
    hueBar[owningPlayer].image_yscale = 0.75;
    hueBar[owningPlayer].owningPlayer = owningPlayer;
    hueBar[owningPlayer].alarm[0]= true
    satBar[owningPlayer] = instance_create(470, 430, sat_2_o);
    satBar[owningPlayer].image_xscale = 0.75;
    satBar[owningPlayer].image_yscale = 0.75;
    satBar[owningPlayer].owningPlayer = owningPlayer;
    satBar[owningPlayer].alarm[0]= true
    valBar[owningPlayer] = instance_create(470, 460, val_2_o);
    valBar[owningPlayer].image_xscale = 0.75;
    valBar[owningPlayer].image_yscale = 0.75;
    valBar[owningPlayer].owningPlayer = owningPlayer;
    valBar[owningPlayer].alarm[0]= true
}
else if(owningPlayer == 3)
{
    hueBar[owningPlayer] = instance_create(1100, 400, hue_2_o);
    hueBar[owningPlayer].image_xscale = 0.75;
    hueBar[owningPlayer].image_yscale = 0.75;
    hueBar[owningPlayer].owningPlayer = owningPlayer;
    hueBar[owningPlayer].alarm[0]= true
    satBar[owningPlayer] = instance_create(1100, 430, sat_2_o);
    satBar[owningPlayer].image_xscale = 0.75;
    satBar[owningPlayer].image_yscale = 0.75;
    satBar[owningPlayer].owningPlayer = owningPlayer;
    satBar[owningPlayer].alarm[0]= true
    valBar[owningPlayer] = instance_create(1100, 460, val_2_o);
    valBar[owningPlayer].image_xscale = 0.75;
    valBar[owningPlayer].image_yscale = 0.75;
    valBar[owningPlayer].owningPlayer = owningPlayer;
    valBar[owningPlayer].alarm[0]= true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num = 1;
//buttonArray[0] = id;
alarm[0] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
